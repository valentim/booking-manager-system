{"ast":null,"code":"var _jsxFileName = \"/Users/thiagovalentim/Documents/Projects/superb/client/src/components/TableDeck/index.tsx\";\nimport React, { Component } from \"react\";\nimport { TableCard } from \"../TableCard\";\nimport { BookingApi } from \"../../services/booking/BookingApi\";\nimport Container from \"react-bootstrap/Container\";\nimport CardDeck from 'react-bootstrap/CardDeck';\nexport class TableDeck extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      restaurants: []\n    };\n  }\n\n  componentDidMount() {\n    this.getRestaurants();\n  }\n\n  getRestaurants() {\n    const bookingApi = new BookingApi('');\n    bookingApi.listRestaurants().then(response => {\n      response.json().then(data => {\n        const restaurantsData = data.data;\n        const filteredRestaurants = restaurantsData.filter(r => r.tables.length > 0).sort((a, b) => b.tables.length - a.tables.length);\n        console.log(filteredRestaurants);\n        this.setState({\n          restaurants: filteredRestaurants\n        });\n      });\n    });\n  }\n\n  render() {\n    const restaurants = this.state.restaurants;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, restaurants.map(restaurant => React.createElement(CardDeck, {\n      key: restaurant.guid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, restaurant.tables.map((table, i) => React.createElement(\"div\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(TableCard, {\n      guid: table.guid,\n      positionName: table.positionName,\n      maxSeats: table.maxSeats,\n      restaurantGuid: restaurant.guid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/thiagovalentim/Documents/Projects/superb/client/src/components/TableDeck/index.tsx"],"names":["React","Component","TableCard","BookingApi","Container","CardDeck","TableDeck","constructor","props","state","restaurants","componentDidMount","getRestaurants","bookingApi","listRestaurants","then","response","json","data","restaurantsData","filteredRestaurants","filter","r","tables","length","sort","a","b","console","log","setState","render","map","restaurant","guid","table","i","positionName","maxSeats"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,UAAT,QAA2B,mCAA3B;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AAMA,OAAO,MAAMC,SAAN,SAAwBL,SAAxB,CAAmD;AACtDM,EAAAA,WAAW,CAACC,KAAD,EAAa;AACpB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE;AADJ,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,cAAL;AACH;;AAGOA,EAAAA,cAAR,GAAyB;AACrB,UAAMC,UAAU,GAAG,IAAIV,UAAJ,CAAe,EAAf,CAAnB;AACAU,IAAAA,UAAU,CAACC,eAAX,GAA6BC,IAA7B,CAAkCC,QAAQ,IAAI;AAC1CA,MAAAA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqBG,IAAI,IAAI;AACzB,cAAMC,eAAe,GAAGD,IAAI,CAACA,IAA7B;AACA,cAAME,mBAAmB,GAAGD,eAAe,CAACE,MAAhB,CAAwBC,CAAD,IAAYA,CAAC,CAACC,MAAF,CAASC,MAAT,GAAkB,CAArD,EAAwDC,IAAxD,CAA6D,CAACC,CAAD,EAASC,CAAT,KAAmBA,CAAC,CAACJ,MAAF,CAASC,MAAT,GAAkBE,CAAC,CAACH,MAAF,CAASC,MAA3G,CAA5B;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYT,mBAAZ;AACA,aAAKU,QAAL,CAAc;AAAEpB,UAAAA,WAAW,EAAEU;AAAf,SAAd;AACH,OALD;AAMH,KAPD;AASH;;AAEDW,EAAAA,MAAM,GAAG;AACL,UAAMrB,WAAW,GAAG,KAAKD,KAAL,CAAWC,WAA/B;AACA,WACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,WAAW,CAACsB,GAAZ,CAAiBC,UAAD,IACb,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,UAAU,CAACC,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,UAAU,CAACV,MAAX,CAAkBS,GAAlB,CAAsB,CAACG,KAAD,EAAaC,CAAb,KACnB;AAAK,MAAA,GAAG,EAAEA,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAED,KAAK,CAACD,IAAvB;AAA6B,MAAA,YAAY,EAAEC,KAAK,CAACE,YAAjD;AAA+D,MAAA,QAAQ,EAAEF,KAAK,CAACG,QAA/E;AAAyF,MAAA,cAAc,EAAEL,UAAU,CAACC,IAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADH,CADL,CADH,CADL,CADJ;AAaH;;AA1CqD","sourcesContent":["import React, { Component } from \"react\";\nimport { TableCard } from \"../TableCard\";\nimport { BookingApi } from \"../../services/booking/BookingApi\";\nimport Container from \"react-bootstrap/Container\";\nimport CardDeck from 'react-bootstrap/CardDeck';\n\ntype SliderState = {\n    restaurants: any[]\n};\n\nexport class TableDeck extends Component<{}, SliderState> {\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            restaurants: []\n        };\n    }\n\n    componentDidMount() {\n        this.getRestaurants();\n    }\n  \n  \n    private getRestaurants() {\n        const bookingApi = new BookingApi('');\n        bookingApi.listRestaurants().then(response => {\n            response.json().then(data => {\n                const restaurantsData = data.data;\n                const filteredRestaurants = restaurantsData.filter((r: any) => r.tables.length > 0).sort((a: any, b:any) => b.tables.length - a.tables.length);\n                console.log(filteredRestaurants)\n                this.setState({ restaurants: filteredRestaurants });\n            });\n        });\n\n    }\n\n    render() {\n        const restaurants = this.state.restaurants;\n        return(\n            <Container>\n                {restaurants.map((restaurant: any) =>\n                    <CardDeck key={restaurant.guid}>\n                        {restaurant.tables.map((table: any, i: string) =>\n                            <div key={i} >\n                                <TableCard guid={table.guid} positionName={table.positionName} maxSeats={table.maxSeats} restaurantGuid={restaurant.guid} />\n                            </div>\n                        )}\n                    </CardDeck>\n                )}\n            </Container>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}