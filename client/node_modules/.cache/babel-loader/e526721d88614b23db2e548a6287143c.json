{"ast":null,"code":"var _jsxFileName = \"/Users/thiagovalentim/Documents/Projects/superb/client/src/components/Pages/Table.tsx\";\nimport React, { Component } from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport Button from \"react-bootstrap/Button\";\nimport { Link } from 'react-router-dom';\nimport Container from \"react-bootstrap/Container\";\nimport { BookingApi } from \"../../services/booking/BookingApi\";\nimport { GenericModal } from \"../Modal\";\nexport class Table extends Component {\n  constructor(props) {\n    super(props);\n    this.genericModal = void 0;\n    this.state = {\n      positionName: '',\n      maxSeats: '0',\n      showModal: false,\n      response: {\n        message: '',\n        data: '',\n        status: ''\n      }\n    };\n    this.genericModal = React.createRef();\n    this.handleDataChange = this.handleDataChange.bind(this);\n    this.saveTable = this.saveTable.bind(this);\n  }\n\n  handleDataChange(event) {\n    const name = event.target.id;\n    const value = event.target.value;\n    const data = {\n      [name]: value\n    };\n    this.setState(data);\n  }\n\n  saveTable(event) {\n    const bookingApi = new BookingApi('');\n    const defaultResponse = {\n      message: 'Restaurant registered with success',\n      status: 'success'\n    };\n\n    if (this.props.tableGuid) {\n      bookingApi.updateTable(this.state.positionName, Number(this.state.maxSeats), this.props.restaurantGuid, this.props.tableGuid).then(result => {\n        let newResponse = defaultResponse;\n        newResponse.message = 'Table updated with success!';\n\n        if (200 !== result.status) {\n          newResponse.message = response.message;\n          newResponse.status = response.status;\n        }\n\n        this.setState({\n          showModal: true,\n          response: newResponse\n        });\n      }).catch(err => {\n        defaultResponse.status = 'error';\n        defaultResponse.message = err;\n        this.setState({\n          showModal: true,\n          response: defaultResponse\n        });\n      }).finally(() => {\n        var _this$genericModal$cu;\n\n        (_this$genericModal$cu = this.genericModal.current) === null || _this$genericModal$cu === void 0 ? void 0 : _this$genericModal$cu.openModal();\n      });\n    } else {\n      bookingApi.addTable(this.state.positionName, Number(this.state.maxSeats), this.props.restaurantGuid).then(result => {\n        let newResponse = defaultResponse;\n        newResponse.message = 'Table added with success!';\n\n        if (201 !== result.status) {\n          newResponse.message = response.message;\n          newResponse.status = response.status;\n        }\n\n        this.setState({\n          showModal: true,\n          response: newResponse\n        });\n      }).catch(err => {\n        defaultResponse.status = 'error';\n        defaultResponse.message = err;\n        this.setState({\n          showModal: true,\n          response: defaultResponse\n        });\n      }).finally(() => {\n        var _this$genericModal$cu2;\n\n        (_this$genericModal$cu2 = this.genericModal.current) === null || _this$genericModal$cu2 === void 0 ? void 0 : _this$genericModal$cu2.openModal();\n      });\n    }\n\n    event.preventDefault();\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"ol\", {\n      className: \"breadcrumb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"breadcrumb-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Home\")), React.createElement(Link, {\n      className: \"breadcrumb-item\",\n      to: \"/manager\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Manager restaurants\"), React.createElement(Link, {\n      className: \"breadcrumb-item\",\n      to: `/restaurants/${this.props.restaurantGuid}/list-tables`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"List tables\"), React.createElement(\"li\", {\n      className: \"breadcrumb-item active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Edit table\"))), React.createElement(Form, {\n      onSubmit: this.saveTable,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(GenericModal, {\n      ref: this.genericModal,\n      message: this.state.response.message,\n      status: this.state.response.status,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(Form.Group, {\n      controlId: \"positionName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Table position name\"), React.createElement(Form.Control, {\n      value: this.state.positionName,\n      onChange: this.handleDataChange,\n      placeholder: \"Table positoin name\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"maxSeats\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Max seats\"), React.createElement(Form.Control, {\n      type: \"number\",\n      value: this.state.maxSeats,\n      onChange: this.handleDataChange,\n      placeholder: \"Max seats\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })), React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Create\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/thiagovalentim/Documents/Projects/superb/client/src/components/Pages/Table.tsx"],"names":["React","Component","Form","Button","Link","Container","BookingApi","GenericModal","Table","constructor","props","genericModal","state","positionName","maxSeats","showModal","response","message","data","status","createRef","handleDataChange","bind","saveTable","event","name","target","id","value","setState","bookingApi","defaultResponse","tableGuid","updateTable","Number","restaurantGuid","then","result","newResponse","catch","err","finally","current","openModal","addTable","preventDefault","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAA4C,OAA5C;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,SAASC,UAAT,QAA2B,mCAA3B;AACA,SAASC,YAAT,QAA6B,UAA7B;AAoBA,OAAO,MAAMC,KAAN,SAAoBP,SAApB,CAAuD;AAG1DQ,EAAAA,WAAW,CAACC,KAAD,EAAoB;AAC3B,UAAMA,KAAN;AAD2B,SAFvBC,YAEuB;AAG3B,SAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE,EADL;AAETC,MAAAA,QAAQ,EAAE,GAFD;AAGTC,MAAAA,SAAS,EAAE,KAHF;AAITC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,OAAO,EAAE,EADH;AAENC,QAAAA,IAAI,EAAE,EAFA;AAGNC,QAAAA,MAAM,EAAE;AAHF;AAJD,KAAb;AAWA,SAAKR,YAAL,GAAoBX,KAAK,CAACoB,SAAN,EAApB;AAEA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeD,IAAf,CAAoB,IAApB,CAAjB;AACH;;AAEOD,EAAAA,gBAAR,CAAyBG,KAAzB,EAAqC;AACjC,UAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,EAA1B;AACA,UAAMC,KAAK,GAAGJ,KAAK,CAACE,MAAN,CAAaE,KAA3B;AACA,UAAMV,IAAI,GAAG;AACT,OAACO,IAAD,GAAQG;AADC,KAAb;AAIA,SAAKC,QAAL,CAAcX,IAAd;AACH;;AAEOK,EAAAA,SAAR,CAAkBC,KAAlB,EAA8B;AAC1B,UAAMM,UAAU,GAAG,IAAIxB,UAAJ,CAAe,EAAf,CAAnB;AACA,UAAMyB,eAAe,GAAG;AACpBd,MAAAA,OAAO,EAAE,oCADW;AAEpBE,MAAAA,MAAM,EAAE;AAFY,KAAxB;;AAKA,QAAI,KAAKT,KAAL,CAAWsB,SAAf,EAA0B;AACtBF,MAAAA,UAAU,CAACG,WAAX,CAAuB,KAAKrB,KAAL,CAAWC,YAAlC,EAAgDqB,MAAM,CAAC,KAAKtB,KAAL,CAAWE,QAAZ,CAAtD,EAA6E,KAAKJ,KAAL,CAAWyB,cAAxF,EAAwG,KAAKzB,KAAL,CAAWsB,SAAnH,EAA8HI,IAA9H,CAAmIC,MAAM,IAAI;AACzI,YAAIC,WAAW,GAAGP,eAAlB;AACAO,QAAAA,WAAW,CAACrB,OAAZ,GAAsB,6BAAtB;;AACA,YAAI,QAAQoB,MAAM,CAAClB,MAAnB,EAA2B;AACvBmB,UAAAA,WAAW,CAACrB,OAAZ,GAAsBD,QAAQ,CAACC,OAA/B;AACAqB,UAAAA,WAAW,CAACnB,MAAZ,GAAqBH,QAAQ,CAACG,MAA9B;AACH;;AAED,aAAKU,QAAL,CAAc;AAAEd,UAAAA,SAAS,EAAE,IAAb;AAAmBC,UAAAA,QAAQ,EAAEsB;AAA7B,SAAd;AACH,OATD,EASGC,KATH,CASSC,GAAG,IAAI;AACZT,QAAAA,eAAe,CAACZ,MAAhB,GAAyB,OAAzB;AACAY,QAAAA,eAAe,CAACd,OAAhB,GAA0BuB,GAA1B;AACA,aAAKX,QAAL,CAAc;AAAEd,UAAAA,SAAS,EAAE,IAAb;AAAmBC,UAAAA,QAAQ,EAAEe;AAA7B,SAAd;AACH,OAbD,EAaGU,OAbH,CAaW,MAAM;AAAA;;AACb,sCAAK9B,YAAL,CAAkB+B,OAAlB,gFAA2BC,SAA3B;AACH,OAfD;AAgBH,KAjBD,MAiBO;AACHb,MAAAA,UAAU,CAACc,QAAX,CAAoB,KAAKhC,KAAL,CAAWC,YAA/B,EAA6CqB,MAAM,CAAC,KAAKtB,KAAL,CAAWE,QAAZ,CAAnD,EAA0E,KAAKJ,KAAL,CAAWyB,cAArF,EAAqGC,IAArG,CAA0GC,MAAM,IAAI;AAChH,YAAIC,WAAW,GAAGP,eAAlB;AACAO,QAAAA,WAAW,CAACrB,OAAZ,GAAsB,2BAAtB;;AACA,YAAI,QAAQoB,MAAM,CAAClB,MAAnB,EAA2B;AACvBmB,UAAAA,WAAW,CAACrB,OAAZ,GAAsBD,QAAQ,CAACC,OAA/B;AACAqB,UAAAA,WAAW,CAACnB,MAAZ,GAAqBH,QAAQ,CAACG,MAA9B;AACH;;AAED,aAAKU,QAAL,CAAc;AAAEd,UAAAA,SAAS,EAAE,IAAb;AAAmBC,UAAAA,QAAQ,EAAEsB;AAA7B,SAAd;AACH,OATD,EASGC,KATH,CASSC,GAAG,IAAI;AACZT,QAAAA,eAAe,CAACZ,MAAhB,GAAyB,OAAzB;AACAY,QAAAA,eAAe,CAACd,OAAhB,GAA0BuB,GAA1B;AACA,aAAKX,QAAL,CAAc;AAAEd,UAAAA,SAAS,EAAE,IAAb;AAAmBC,UAAAA,QAAQ,EAAEe;AAA7B,SAAd;AACH,OAbD,EAaGU,OAbH,CAaW,MAAM;AAAA;;AACb,uCAAK9B,YAAL,CAAkB+B,OAAlB,kFAA2BC,SAA3B;AACH,OAfD;AAgBH;;AAEDnB,IAAAA,KAAK,CAACqB,cAAN;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CADJ,EAII,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAkC,MAAA,EAAE,EAAC,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAJJ,EAKI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAkC,MAAA,EAAE,EAAG,gBAAe,KAAKpC,KAAL,CAAWyB,cAAe,cAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALJ,EAMI;AAAI,MAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ,CADJ,CADJ,EAWI,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKZ,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAE,KAAKZ,YAAxB;AAAsC,MAAA,OAAO,EAAE,KAAKC,KAAL,CAAWI,QAAX,CAAoBC,OAAnE;AAA4E,MAAA,MAAM,EAAE,KAAKL,KAAL,CAAWI,QAAX,CAAoBG,MAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWC,YAAhC;AAA8C,MAAA,QAAQ,EAAE,KAAKQ,gBAA7D;AAA+E,MAAA,WAAW,EAAC,qBAA3F;AAAiH,MAAA,QAAQ,MAAzH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFJ,EAOI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,IAAI,EAAC,QAAnB;AAA4B,MAAA,KAAK,EAAE,KAAKT,KAAL,CAAWE,QAA9C;AAAwD,MAAA,QAAQ,EAAE,KAAKO,gBAAvE;AAAyF,MAAA,WAAW,EAAC,WAArG;AAAiH,MAAA,QAAQ,MAAzH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAPJ,EAWI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ,CAXJ,CADJ;AA6BH;;AA7GyD","sourcesContent":["import React, { Component, RefObject } from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport Button from \"react-bootstrap/Button\";\nimport { Link } from 'react-router-dom';\nimport Container from \"react-bootstrap/Container\";\nimport { BookingApi } from \"../../services/booking/BookingApi\";\nimport { GenericModal } from \"../Modal\";\n\ntype ResponseData = {\n    data?: string,\n    message: string,\n    status: string\n};\n\ntype TableStates = {\n    positionName: string,\n    maxSeats: string,\n    showModal: boolean,\n    response: ResponseData\n};\n\ntype TableProps = {\n    restaurantGuid: string,\n    tableGuid?: string\n};\n\nexport class Table extends Component<TableProps, TableStates> {\n    private genericModal: RefObject<GenericModal>;\n\n    constructor(props: TableProps) {\n        super(props);\n\n        this.state = {\n            positionName: '',\n            maxSeats: '0',\n            showModal: false,\n            response: {\n                message: '',\n                data: '',\n                status: ''\n            }\n        }\n\n        this.genericModal = React.createRef();\n\n        this.handleDataChange = this.handleDataChange.bind(this);\n        this.saveTable = this.saveTable.bind(this);\n    }\n\n    private handleDataChange(event: any) {\n        const name = event.target.id;\n        const value = event.target.value;\n        const data = {\n            [name]: value\n        } as TableStates;\n\n        this.setState(data);\n    }\n\n    private saveTable(event: any) {\n        const bookingApi = new BookingApi('');\n        const defaultResponse = {\n            message: 'Restaurant registered with success',\n            status: 'success'\n        }\n\n        if (this.props.tableGuid) {\n            bookingApi.updateTable(this.state.positionName, Number(this.state.maxSeats), this.props.restaurantGuid, this.props.tableGuid).then(result => {\n                let newResponse = defaultResponse;\n                newResponse.message = 'Table updated with success!';\n                if (200 !== result.status) {\n                    newResponse.message = response.message;\n                    newResponse.status = response.status;\n                }\n\n                this.setState({ showModal: true, response: newResponse });\n            }).catch(err => {\n                defaultResponse.status = 'error';\n                defaultResponse.message = err;\n                this.setState({ showModal: true, response: defaultResponse });\n            }).finally(() => {\n                this.genericModal.current?.openModal();\n            });\n        } else {\n            bookingApi.addTable(this.state.positionName, Number(this.state.maxSeats), this.props.restaurantGuid).then(result => {\n                let newResponse = defaultResponse;\n                newResponse.message = 'Table added with success!';\n                if (201 !== result.status) {\n                    newResponse.message = response.message;\n                    newResponse.status = response.status;\n                }\n\n                this.setState({ showModal: true, response: newResponse });\n            }).catch(err => {\n                defaultResponse.status = 'error';\n                defaultResponse.message = err;\n                this.setState({ showModal: true, response: defaultResponse });\n            }).finally(() => {\n                this.genericModal.current?.openModal();\n            });\n        }\n\n        event.preventDefault();\n    }\n\n    render() {\n        return(\n            <Container>\n                <nav>\n                    <ol className=\"breadcrumb\">\n                        <li className=\"breadcrumb-item\">\n                            <a href=\"/\">Home</a>\n                        </li>\n                        <Link className=\"breadcrumb-item\" to=\"/manager\">Manager restaurants</Link>\n                        <Link className=\"breadcrumb-item\" to={`/restaurants/${this.props.restaurantGuid}/list-tables`}>List tables</Link>\n                        <li className=\"breadcrumb-item active\">Edit table</li>\n                    </ol>\n                </nav>\n                <Form onSubmit={this.saveTable}>\n                    <GenericModal ref={this.genericModal} message={this.state.response.message} status={this.state.response.status} />\n                    <Form.Group controlId=\"positionName\">\n                        <Form.Label>Table position name</Form.Label>\n                        <Form.Control value={this.state.positionName} onChange={this.handleDataChange} placeholder=\"Table positoin name\" required />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"maxSeats\">\n                        <Form.Label>Max seats</Form.Label>\n                        <Form.Control type=\"number\" value={this.state.maxSeats} onChange={this.handleDataChange} placeholder=\"Max seats\" required />\n                    </Form.Group>\n                    <Button variant=\"primary\" type=\"submit\">\n                        Create\n                    </Button>\n                </Form>\n            </Container>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}