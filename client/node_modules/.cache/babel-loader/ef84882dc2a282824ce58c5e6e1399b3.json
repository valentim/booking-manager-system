{"ast":null,"code":"var _jsxFileName = \"/Users/thiagovalentim/Documents/Projects/superb/client/src/components/Pages/Restaurant.tsx\";\nimport React, { Component } from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport Button from \"react-bootstrap/Button\";\nimport { BookingApi } from \"../../services/booking/BookingApi\";\nimport { GenericModal } from \"../Modal\";\nexport class Restaurant extends Component {\n  constructor(props) {\n    super(props);\n    this.genericModal = void 0;\n    this.state = {\n      open: '',\n      close: '',\n      name: '',\n      businessHourData: [],\n      showModal: false,\n      response: {\n        message: '',\n        status: ''\n      }\n    };\n    this.genericModal = React.createRef();\n    this.handleDataChange = this.handleDataChange.bind(this);\n    this.createRestaurant = this.createRestaurant.bind(this);\n  }\n\n  componentDidMount() {\n    this.generateTimes();\n  }\n\n  generateTimes() {\n    const hours = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n\n    const convertTime = (hours, a) => {\n      return hours.map(i => {\n        const hour = i + 0;\n\n        if (hour.toString().length > 1) {\n          return `${hour}:00 ${a}`;\n        }\n\n        return `0${hour}:00 ${a}`;\n      });\n    };\n\n    this.setState({\n      businessHourData: ['12:00', ...convertTime(hours, 'AM'), ...convertTime(hours, 'PM')]\n    });\n  }\n\n  handleDataChange(event) {\n    const name = event.target.id;\n    const value = event.target.value;\n    const data = {\n      [name]: value\n    };\n    this.setState(data);\n  }\n\n  createRestaurant(event) {\n    const bookingApi = new BookingApi('');\n    const response = {\n      message: 'Restaurant registered with success',\n      status: 'success'\n    };\n    bookingApi.createRestaurant(this.state.name, this.state.open, this.state.close).then(result => {\n      const allowedStatus = [200, 201];\n\n      if (!allowedStatus.includes(result.status)) {\n        result.json().then(response => {\n          this.setState({\n            showModal: true,\n            response\n          });\n        });\n      }\n    }).catch(err => {\n      response.status = 'Error';\n      response.message = err;\n      this.setState({\n        showModal: true,\n        response\n      });\n    }).finally(() => {\n      var _this$genericModal$cu;\n\n      (_this$genericModal$cu = this.genericModal.current) === null || _this$genericModal$cu === void 0 ? void 0 : _this$genericModal$cu.openModal();\n    });\n    event.preventDefault();\n  }\n\n  render() {\n    const businessHours = this.state.businessHourData.map((hour, i) => React.createElement(\"option\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, hour));\n    return React.createElement(Form, {\n      onSubmit: this.createRestaurant,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(GenericModal, {\n      ref: this.genericModal,\n      message: this.state.response.message,\n      status: this.state.response.status,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(Form.Group, {\n      controlId: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Restaurant name\"), React.createElement(Form.Control, {\n      value: this.state.name,\n      onChange: this.handleDataChange,\n      placeholder: \"Restaurant name\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"open\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Open\"), React.createElement(Form.Control, {\n      as: \"select\",\n      value: this.state.open,\n      onChange: this.handleDataChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), businessHours)), React.createElement(Form.Group, {\n      controlId: \"close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Close\"), React.createElement(Form.Control, {\n      as: \"select\",\n      value: this.state.close,\n      onChange: this.handleDataChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), businessHours)), React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Create\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/thiagovalentim/Documents/Projects/superb/client/src/components/Pages/Restaurant.tsx"],"names":["React","Component","Form","Button","BookingApi","GenericModal","Restaurant","constructor","props","genericModal","state","open","close","name","businessHourData","showModal","response","message","status","createRef","handleDataChange","bind","createRestaurant","componentDidMount","generateTimes","hours","convertTime","a","map","i","hour","toString","length","setState","event","target","id","value","data","bookingApi","then","result","allowedStatus","includes","json","catch","err","finally","current","openModal","preventDefault","render","businessHours"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAA4C,OAA5C;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,UAAT,QAA2B,mCAA3B;AACA,SAASC,YAAT,QAA6B,UAA7B;AAoBA,OAAO,MAAMC,UAAN,SAAyBL,SAAzB,CAAsE;AAGzEM,EAAAA,WAAW,CAACC,KAAD,EAAa;AACpB,UAAMA,KAAN;AADoB,SAFhBC,YAEgB;AAGpB,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,IAAI,EAAE,EAHG;AAITC,MAAAA,gBAAgB,EAAE,EAJT;AAKTC,MAAAA,SAAS,EAAE,KALF;AAMTC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,OAAO,EAAE,EADH;AAENC,QAAAA,MAAM,EAAE;AAFF;AAND,KAAb;AAYA,SAAKT,YAAL,GAAoBT,KAAK,CAACmB,SAAN,EAApB;AAEA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAAxB;AACH;;AAEME,EAAAA,iBAAP,GAA2B;AACvB,SAAKC,aAAL;AACH;;AAEOA,EAAAA,aAAR,GAAwB;AACpB,UAAMC,KAAK,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,EAAnB,EAAsB,EAAtB,CAAd;;AACA,UAAMC,WAAW,GAAG,CAACD,KAAD,EAAkBE,CAAlB,KAA0C;AAC1D,aAAOF,KAAK,CAACG,GAAN,CAAWC,CAAD,IAAe;AAC5B,cAAMC,IAAI,GAAGD,CAAC,GAAG,CAAjB;;AACA,YAAIC,IAAI,CAACC,QAAL,GAAgBC,MAAhB,GAAyB,CAA7B,EAAgC;AAC5B,iBAAQ,GAAEF,IAAK,OAAMH,CAAE,EAAvB;AACH;;AAED,eAAQ,IAAGG,IAAK,OAAMH,CAAE,EAAxB;AACH,OAPM,CAAP;AAQH,KATD;;AAWA,SAAKM,QAAL,CAAc;AAAEnB,MAAAA,gBAAgB,EAAE,CAAC,OAAD,EAAU,GAAGY,WAAW,CAACD,KAAD,EAAQ,IAAR,CAAxB,EAAuC,GAAGC,WAAW,CAACD,KAAD,EAAQ,IAAR,CAArD;AAApB,KAAd;AACH;;AAEOL,EAAAA,gBAAR,CAAyBc,KAAzB,EAAqC;AACjC,UAAMrB,IAAI,GAAGqB,KAAK,CAACC,MAAN,CAAaC,EAA1B;AACA,UAAMC,KAAK,GAAGH,KAAK,CAACC,MAAN,CAAaE,KAA3B;AACA,UAAMC,IAAI,GAAG;AACT,OAACzB,IAAD,GAAQwB;AADC,KAAb;AAIA,SAAKJ,QAAL,CAAcK,IAAd;AACH;;AAEOhB,EAAAA,gBAAR,CAAyBY,KAAzB,EAAqC;AACjC,UAAMK,UAAU,GAAG,IAAInC,UAAJ,CAAe,EAAf,CAAnB;AACA,UAAMY,QAAQ,GAAG;AACbC,MAAAA,OAAO,EAAE,oCADI;AAEbC,MAAAA,MAAM,EAAE;AAFK,KAAjB;AAKAqB,IAAAA,UAAU,CAACjB,gBAAX,CAA4B,KAAKZ,KAAL,CAAWG,IAAvC,EAA6C,KAAKH,KAAL,CAAWC,IAAxD,EAA8D,KAAKD,KAAL,CAAWE,KAAzE,EAAgF4B,IAAhF,CAAqFC,MAAM,IAAI;AAC3F,YAAMC,aAAa,GAAG,CAAC,GAAD,EAAM,GAAN,CAAtB;;AAEA,UAAI,CAACA,aAAa,CAACC,QAAd,CAAuBF,MAAM,CAACvB,MAA9B,CAAL,EAA4C;AACxCuB,QAAAA,MAAM,CAACG,IAAP,GAAcJ,IAAd,CAAmBxB,QAAQ,IAAI;AAC3B,eAAKiB,QAAL,CAAc;AAAElB,YAAAA,SAAS,EAAE,IAAb;AAAmBC,YAAAA;AAAnB,WAAd;AACH,SAFD;AAGH;AACJ,KARD,EAQG6B,KARH,CAQSC,GAAG,IAAI;AACZ9B,MAAAA,QAAQ,CAACE,MAAT,GAAkB,OAAlB;AACAF,MAAAA,QAAQ,CAACC,OAAT,GAAmB6B,GAAnB;AACA,WAAKb,QAAL,CAAc;AAAElB,QAAAA,SAAS,EAAE,IAAb;AAAmBC,QAAAA;AAAnB,OAAd;AACH,KAZD,EAYG+B,OAZH,CAYW,MAAM;AAAA;;AACb,oCAAKtC,YAAL,CAAkBuC,OAAlB,gFAA2BC,SAA3B;AACH,KAdD;AAgBAf,IAAAA,KAAK,CAACgB,cAAN;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAMC,aAAa,GAAG,KAAK1C,KAAL,CAAWI,gBAAX,CAA4Bc,GAA5B,CAAgC,CAACE,IAAD,EAAeD,CAAf,KAA6B;AAAQ,MAAA,GAAG,EAAEA,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiBC,IAAjB,CAA7D,CAAtB;AAEA,WACI,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKR,gBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAE,KAAKb,YAAxB;AAAsC,MAAA,OAAO,EAAE,KAAKC,KAAL,CAAWM,QAAX,CAAoBC,OAAnE;AAA4E,MAAA,MAAM,EAAE,KAAKP,KAAL,CAAWM,QAAX,CAAoBE,MAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,KAAK,EAAE,KAAKR,KAAL,CAAWG,IAAhC;AAAsC,MAAA,QAAQ,EAAE,KAAKO,gBAArD;AAAuE,MAAA,WAAW,EAAC,iBAAnF;AAAqG,MAAA,QAAQ,MAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFJ,EAOI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,EAAE,EAAC,QAAjB;AAA0B,MAAA,KAAK,EAAE,KAAKV,KAAL,CAAWC,IAA5C;AAAkD,MAAA,QAAQ,EAAE,KAAKS,gBAAjE;AAAoF,MAAA,QAAQ,MAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEKgC,aAFL,CAFJ,CAPJ,EAcI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,EAAE,EAAC,QAAjB;AAA0B,MAAA,KAAK,EAAE,KAAK1C,KAAL,CAAWE,KAA5C;AAAmD,MAAA,QAAQ,EAAE,KAAKQ,gBAAlE;AAAoF,MAAA,QAAQ,MAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEKgC,aAFL,CAFJ,CAdJ,EAqBI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBJ,CADJ;AA2BH;;AA9GwE","sourcesContent":["import React, { Component, RefObject } from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport Button from \"react-bootstrap/Button\";\nimport { BookingApi } from \"../../services/booking/BookingApi\";\nimport { GenericModal } from \"../Modal\";\n\ntype ResponseData = {\n    message: string,\n    status: string\n};\n\ntype RestaurantStates = {\n    open: string,\n    close: string,\n    name: string,\n    businessHourData: string[],\n    showModal: boolean,\n    response: ResponseData\n};\n\ntype RestaurantProps = {\n    restaurantGuid: string\n};\n\nexport class Restaurant extends Component<RestaurantProps, RestaurantStates> {\n    private genericModal: RefObject<GenericModal>;\n\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            open: '',\n            close: '',\n            name: '',\n            businessHourData: [],\n            showModal: false,\n            response: {\n                message: '',\n                status: ''\n            }\n        }\n\n        this.genericModal = React.createRef();\n\n        this.handleDataChange = this.handleDataChange.bind(this);\n        this.createRestaurant = this.createRestaurant.bind(this);\n    }\n\n    public componentDidMount() {\n        this.generateTimes();\n    }\n\n    private generateTimes() {\n        const hours = [1,2,3,4,5,6,7,8,9,10,11];\n        const convertTime = (hours: number[], a: string): string[] => {\n            return hours.map((i: number) => {\n                const hour = i + 0;\n                if (hour.toString().length > 1) {\n                    return `${hour}:00 ${a}`;\n                }\n    \n                return `0${hour}:00 ${a}`;\n            });\n        };\n\n        this.setState({ businessHourData: ['12:00', ...convertTime(hours, 'AM'), ...convertTime(hours, 'PM')] });\n    }\n\n    private handleDataChange(event: any) {\n        const name = event.target.id;\n        const value = event.target.value;\n        const data = {\n            [name]: value\n        } as RestaurantStates;\n\n        this.setState(data);\n    }\n\n    private createRestaurant(event: any) {\n        const bookingApi = new BookingApi('');\n        const response = {\n            message: 'Restaurant registered with success',\n            status: 'success'\n        }\n\n        bookingApi.createRestaurant(this.state.name, this.state.open, this.state.close).then(result => {\n            const allowedStatus = [200, 201];\n\n            if (!allowedStatus.includes(result.status)) {\n                result.json().then(response => {\n                    this.setState({ showModal: true, response });\n                });\n            }\n        }).catch(err => {\n            response.status = 'Error';\n            response.message = err;\n            this.setState({ showModal: true, response });\n        }).finally(() => {\n            this.genericModal.current?.openModal();\n        });\n\n        event.preventDefault();\n    }\n\n    render() {\n        const businessHours = this.state.businessHourData.map((hour: string, i: number) => <option key={i}>{hour}</option>);\n\n        return(\n            <Form onSubmit={this.createRestaurant}>\n                <GenericModal ref={this.genericModal} message={this.state.response.message} status={this.state.response.status} />\n                <Form.Group controlId=\"name\">\n                    <Form.Label>Restaurant name</Form.Label>\n                    <Form.Control value={this.state.name} onChange={this.handleDataChange} placeholder=\"Restaurant name\" required />\n                </Form.Group>\n\n                <Form.Group controlId=\"open\">\n                    <Form.Label>Open</Form.Label>\n                    <Form.Control as=\"select\" value={this.state.open} onChange={this.handleDataChange}  required>\n                        <option></option>\n                        {businessHours}\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"close\">\n                    <Form.Label>Close</Form.Label>\n                    <Form.Control as=\"select\" value={this.state.close} onChange={this.handleDataChange} required>\n                        <option></option>\n                        {businessHours}\n                    </Form.Control>\n                </Form.Group>\n                <Button variant=\"primary\" type=\"submit\">\n                    Create\n                </Button>\n            </Form>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}