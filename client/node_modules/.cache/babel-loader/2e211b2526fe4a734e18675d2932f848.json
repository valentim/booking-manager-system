{"ast":null,"code":"var _jsxFileName = \"/Users/thiagovalentim/Documents/Projects/superb/client/src/components/Pages/Restaurant.tsx\";\nimport React, { Component } from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport Button from \"react-bootstrap/Button\";\nimport { BookingApi } from \"../../services/booking/BookingApi\";\nimport { GenericModal } from \"../Modal\";\nexport class Restaurant extends Component {\n  constructor(props) {\n    super(props);\n    this.genericModal = void 0;\n    const hours = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n\n    const convertTime = (hours, a) => {\n      return hours.map(i => {\n        const hour = i + 0;\n\n        if (hour.toString().length > 1) {\n          return `${hour}:00 ${a}`;\n        }\n\n        return `0${hour}:00 ${a}`;\n      });\n    };\n\n    this.state = {\n      showModal: false,\n      open: '',\n      close: '',\n      name: '',\n      businessHourData: ['12:00', ...convertTime(hours, 'AM'), ...convertTime(hours, 'PM')]\n    };\n  }\n\n  handleDataChange(event) {\n    const name = event.target.id;\n    const value = event.target.value;\n    const data = {\n      [name]: value\n    };\n    this.setState(data);\n  }\n\n  createRestaurant(event) {\n    var _this$genericModal$cu;\n\n    const bookingApi = new BookingApi('');\n    const response = {\n      message: 'Restaurant registered with success',\n      status: 'success'\n    };\n    bookingApi.createRestaurant(this.state.name, this.state.open, this.state.close).then(result => {\n      const allowedStatus = [200, 201];\n\n      if (!allowedStatus.includes(result.status)) {\n        result.json().then(response => {\n          this.setState({\n            showModal: true,\n            response\n          });\n        });\n      }\n    }).catch(err => {\n      response.status = 'Error';\n      response.message = err;\n    });\n    this.setState({\n      showModal: true,\n      response\n    });\n    (_this$genericModal$cu = this.genericModal.current) === null || _this$genericModal$cu === void 0 ? void 0 : _this$genericModal$cu.openModal();\n    event.preventDefault();\n  }\n\n  render() {\n    return React.createElement(Form, {\n      onSubmit: this.createRestaurant,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(GenericModal, {\n      ref: this.genericModal,\n      message: this.state.response.message,\n      status: this.state.response.status,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(Form.Group, {\n      controlId: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Restaurant name\"), React.createElement(Form.Control, {\n      value: this.state.name,\n      onChange: this.handleDataChange,\n      placeholder: \"Restaurant name\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"open\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Open\"), React.createElement(Form.Control, {\n      as: \"select\",\n      value: this.state.open,\n      onChange: this.handleDataChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), businessHours)), React.createElement(Form.Group, {\n      controlId: \"close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Close\"), React.createElement(Form.Control, {\n      as: \"select\",\n      value: this.state.close,\n      onChange: this.handleDataChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), businessHours)), React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Create\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/thiagovalentim/Documents/Projects/superb/client/src/components/Pages/Restaurant.tsx"],"names":["React","Component","Form","Button","BookingApi","GenericModal","Restaurant","constructor","props","genericModal","hours","convertTime","a","map","i","hour","toString","length","state","showModal","open","close","name","businessHourData","handleDataChange","event","target","id","value","data","setState","createRestaurant","bookingApi","response","message","status","then","result","allowedStatus","includes","json","catch","err","current","openModal","preventDefault","render","businessHours"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport Button from \"react-bootstrap/Button\";\nimport { BookingApi } from \"../../services/booking/BookingApi\";\nimport { GenericModal } from \"../Modal\";\n\ntype ResponseData = {\n    message: string,\n    status: string\n};\n\ntype RestaurantStates = {\n    open: string,\n    close: string,\n    name: string,\n    businessHourData: string[],\n    showModal: boolean,\n    response: ResponseData\n};\n\nexport class Restaurant extends Component<{}, RestaurantStates> {\n    private genericModal: RefObject<GenericModal>;\n\n    constructor(props: any) {\n        super(props);\n\n        const hours = [1,2,3,4,5,6,7,8,9,10,11];\n        const convertTime = (hours: number[], a: string): string[] => {\n            return hours.map((i: number) => {\n                const hour = i + 0;\n                if (hour.toString().length > 1) {\n                    return `${hour}:00 ${a}`;\n                }\n    \n                return `0${hour}:00 ${a}`;\n            });\n        };\n\n        this.state = {\n            showModal: false,\n            open: '',\n            close: '',\n            name: '',\n            businessHourData: ['12:00', ...convertTime(hours, 'AM'), ...convertTime(hours, 'PM')]\n        }\n    }\n\n    public handleDataChange(event: any) {\n        const name = event.target.id;\n        const value = event.target.value;\n        const data = {\n            [name]: value\n        } as RestaurantStates;\n\n        this.setState(data);\n    }\n\n    public createRestaurant(event: any) {\n        const bookingApi = new BookingApi('');\n        const response = {\n            message: 'Restaurant registered with success',\n            status: 'success'\n        }\n\n        bookingApi.createRestaurant(this.state.name, this.state.open, this.state.close).then(result => {\n            const allowedStatus = [200, 201];\n\n            if (!allowedStatus.includes(result.status)) {\n                result.json().then(response => {\n                    this.setState({ showModal: true, response });\n                });\n            }\n        }).catch(err => {\n            response.status = 'Error';\n            response.message = err;\n        });\n\n        this.setState({ showModal: true, response });\n\n        this.genericModal.current?.openModal();\n\n        event.preventDefault();\n    }\n\n    render() {\n        return(\n            <Form onSubmit={this.createRestaurant}>\n                <GenericModal ref={this.genericModal} message={this.state.response.message} status={this.state.response.status} />\n                <Form.Group controlId=\"name\">\n                    <Form.Label>Restaurant name</Form.Label>\n                    <Form.Control value={this.state.name} onChange={this.handleDataChange} placeholder=\"Restaurant name\" required />\n                </Form.Group>\n\n                <Form.Group controlId=\"open\">\n                    <Form.Label>Open</Form.Label>\n                    <Form.Control as=\"select\" value={this.state.open} onChange={this.handleDataChange}  required>\n                        <option></option>\n                        {businessHours}\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"close\">\n                    <Form.Label>Close</Form.Label>\n                    <Form.Control as=\"select\" value={this.state.close} onChange={this.handleDataChange} required>\n                        <option></option>\n                        {businessHours}\n                    </Form.Control>\n                </Form.Group>\n                <Button variant=\"primary\" type=\"submit\">\n                    Create\n                </Button>\n            </Form>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}