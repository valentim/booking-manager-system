{"ast":null,"code":"var _jsxFileName = \"/Users/thiagovalentim/Documents/Projects/superb/client/src/components/Pages/Reservation.tsx\";\nimport React, { Component } from \"react\"; // import Form from 'react-bootstrap/Form';\n// import Button from \"react-bootstrap/Button\";\n\nimport { BookingApi } from \"../../services/booking/BookingApi\";\nimport { GenericModal } from \"../Modal\";\nimport InputMoment from 'input-moment';\nimport moment from 'moment';\nimport './Calendar.css';\nexport class Reservation extends Component {\n  constructor(props) {\n    super(props);\n    this.genericModal = void 0;\n    const now = moment();\n    now.set({\n      minute: 0\n    });\n    this.state = {\n      when: now,\n      showModal: false,\n      response: {\n        message: '',\n        reservationCode: '',\n        status: ''\n      }\n    };\n    this.genericModal = React.createRef();\n    this.handleDataChange = this.handleDataChange.bind(this);\n    this.saveReservation = this.saveReservation.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n  }\n\n  handleDataChange(event) {\n    const name = event.target.id;\n    const value = event.target.value;\n    const data = {\n      [name]: value\n    };\n    this.setState(data);\n  }\n\n  saveReservation() {\n    const bookingApi = new BookingApi('');\n    const response = {\n      message: 'Restaurant registered with success',\n      status: 'success'\n    };\n    const userGuid = '123';\n    const when = this.state.when.format('YYYY-MM-DD HH:mm:00');\n    console.log(this.props.reservationGuid);\n\n    if (this.props.reservationGuid) {\n      bookingApi.updateReservation(when, userGuid, this.props.restaurantGuid, this.props.tableGuid, this.props.reservationGuid).then(result => {\n        if (200 === result.status) {\n          result.json().then(response => {\n            return response; // this.setState({ showModal: true, response });\n          });\n        }\n\n        return result;\n      }).then(response => {\n        console.log(response);\n      }).catch(err => {\n        response.status = 'Error';\n        response.message = err;\n      }).finally(() => {\n        var _this$genericModal$cu;\n\n        (_this$genericModal$cu = this.genericModal.current) === null || _this$genericModal$cu === void 0 ? void 0 : _this$genericModal$cu.openModal();\n      });\n    } else {\n      bookingApi.createReservation(when, userGuid, this.props.restaurantGuid, this.props.tableGuid).then(result => {\n        if (201 === result.status) {\n          result.json().then(response => {\n            return response;\n          });\n        }\n      }).then(response => {\n        console.log(response); // return response;\n        // this.setState({ showModal: true, response });\n      }).catch(err => {\n        response.status = 'Error';\n        response.message = err;\n      }).finally(() => {\n        var _this$genericModal$cu2;\n\n        (_this$genericModal$cu2 = this.genericModal.current) === null || _this$genericModal$cu2 === void 0 ? void 0 : _this$genericModal$cu2.openModal();\n      });\n    }\n  }\n\n  handleChange(when) {\n    this.setState({\n      when\n    });\n  }\n\n  handleSave() {\n    console.log('saved', this.state.when.format('llll'));\n    this.saveReservation();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(GenericModal, {\n      ref: this.genericModal,\n      message: this.state.response.message,\n      status: this.state.response.status,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(InputMoment, {\n      moment: this.state.when,\n      onChange: this.handleChange,\n      onSave: this.handleSave,\n      minStep: 60 // default\n      ,\n      hourStep: 1 // default\n      ,\n      prevMonthIcon: \"ion-ios-arrow-left\" // default\n      ,\n      nextMonthIcon: \"ion-ios-arrow-right\" // default\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/thiagovalentim/Documents/Projects/superb/client/src/components/Pages/Reservation.tsx"],"names":["React","Component","BookingApi","GenericModal","InputMoment","moment","Reservation","constructor","props","genericModal","now","set","minute","state","when","showModal","response","message","reservationCode","status","createRef","handleDataChange","bind","saveReservation","handleChange","handleSave","event","name","target","id","value","data","setState","bookingApi","userGuid","format","console","log","reservationGuid","updateReservation","restaurantGuid","tableGuid","then","result","json","catch","err","finally","current","openModal","createReservation","render"],"mappings":"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","sourcesContent":["import React, { Component, RefObject } from \"react\";\n// import Form from 'react-bootstrap/Form';\n// import Button from \"react-bootstrap/Button\";\nimport { BookingApi } from \"../../services/booking/BookingApi\";\nimport { GenericModal } from \"../Modal\";\nimport InputMoment from 'input-moment';\nimport moment from 'moment';\nimport './Calendar.css';\n\ntype ResponseData = {\n    reservationCode?: string,\n    message: string,\n    status: string\n};\n\ntype ReservationStates = {\n    when: moment.Moment,\n    showModal: boolean,\n    response: ResponseData\n};\n\ntype ReservationProps = {\n    reservationGuid?: string,\n    restaurantGuid: string,\n    tableGuid: string\n};\n\nexport class Reservation extends Component<ReservationProps, ReservationStates> {\n    private genericModal: RefObject<GenericModal>;\n\n    constructor(props: ReservationProps) {\n        super(props);\n\n        const now = moment();\n        now.set({minute: 0});\n\n        this.state = {\n            when: now,\n            showModal: false,\n            response: {\n                message: '',\n                reservationCode: '',\n                status: ''\n            }\n        }\n\n        this.genericModal = React.createRef();\n\n        this.handleDataChange = this.handleDataChange.bind(this);\n        this.saveReservation = this.saveReservation.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSave = this.handleSave.bind(this);\n    }\n\n    private handleDataChange(event: any) {\n        const name = event.target.id;\n        const value = event.target.value;\n        const data = {\n            [name]: value\n        } as ReservationStates;\n\n        this.setState(data);\n    }\n\n    private saveReservation() {\n        const bookingApi = new BookingApi('');\n        const response = {\n            message: 'Restaurant registered with success',\n            status: 'success'\n        }\n\n        const userGuid = '123';\n\n        const when = this.state.when.format('YYYY-MM-DD HH:mm:00');\n\n        console.log(this.props.reservationGuid);\n        if (this.props.reservationGuid) {\n            bookingApi.updateReservation(when, userGuid, this.props.restaurantGuid, this.props.tableGuid, this.props.reservationGuid).then(result => {\n                if (200 === result.status) {\n                    result.json().then(response => {\n                        return response;\n                        // this.setState({ showModal: true, response });\n                    });\n                }\n\n                return result;\n            }).then((response) => {\n                console.log(response)\n            }).catch(err => {\n                response.status = 'Error';\n                response.message = err;\n            }).finally(() => {\n                this.genericModal.current?.openModal();\n            });\n        } else {\n            bookingApi.createReservation(when, userGuid, this.props.restaurantGuid, this.props.tableGuid).then(result => {\n                if (201 === result.status) {\n                    result.json().then(response => {\n                        return response;\n                    });\n                }\n                \n            }).then((response) => {\n                console.log(response);\n                // return response;\n                // this.setState({ showModal: true, response });\n            }).catch(err => {\n                response.status = 'Error';\n                response.message = err;\n            }).finally(() => {\n                this.genericModal.current?.openModal();\n            });\n        }\n    }\n\n    private handleChange(when: moment.Moment) {\n        this.setState({ when });\n    };\n    \n    private handleSave() {\n        console.log('saved', this.state.when.format('llll'));\n        this.saveReservation();\n    };\n\n    render() {\n        return(\n            <div>\n                <GenericModal ref={this.genericModal} message={this.state.response.message} status={this.state.response.status} />\n                \n                <InputMoment moment={this.state.when}\n                    onChange={this.handleChange}\n                    onSave={this.handleSave}\n                    minStep={60} // default\n                    hourStep={1} // default\n                    prevMonthIcon=\"ion-ios-arrow-left\" // default\n                    nextMonthIcon=\"ion-ios-arrow-right\" // default\n                />\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}