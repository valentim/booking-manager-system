{"ast":null,"code":"var _jsxFileName = \"/Users/thiagovalentim/Documents/Projects/superb/client/src/components/Pages/Table.tsx\";\nimport React, { Component } from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport Button from \"react-bootstrap/Button\";\nimport { Link } from 'react-router-dom';\nimport Container from \"react-bootstrap/Container\";\nimport { BookingApi } from \"../../services/booking/BookingApi\";\nimport { GenericModal } from \"../Modal\";\nexport class Table extends Component {\n  constructor(props) {\n    super(props);\n    this.genericModal = void 0;\n    this.state = {\n      positionName: '',\n      maxSeats: '0',\n      showModal: false,\n      response: {\n        message: '',\n        data: '',\n        status: ''\n      }\n    };\n    this.genericModal = React.createRef();\n    this.handleDataChange = this.handleDataChange.bind(this);\n    this.saveTable = this.saveTable.bind(this);\n    this.getTable = this.getTable.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.tableGuid) {\n      this.getTable();\n    }\n  }\n\n  getTable() {\n    const bookingApi = new BookingApi('');\n    bookingApi.getTable(this.props.restaurantGuid, this.props.tableGuid).then(result => {\n      result.json().then(response => {\n        this.setState({\n          maxSeats: response.data.maxSeats,\n          positionName: response.data.positionName\n        });\n      });\n    });\n  }\n\n  handleDataChange(event) {\n    const name = event.target.id;\n    const value = event.target.value;\n    const data = {\n      [name]: value\n    };\n    this.setState(data);\n  }\n\n  saveTable(event) {\n    const bookingApi = new BookingApi('');\n    const defaultResponse = {\n      message: 'Restaurant registered with success',\n      status: 'success'\n    };\n\n    if (this.props.tableGuid) {\n      bookingApi.updateTable(this.state.positionName, Number(this.state.maxSeats), this.props.restaurantGuid, this.props.tableGuid).then(result => {\n        result.json().then(response => {\n          let newResponse = defaultResponse;\n          newResponse.message = 'Table updated with success!';\n\n          if (200 !== result.status) {\n            newResponse.message = response.message;\n            newResponse.status = response.status;\n          }\n\n          this.setState({\n            showModal: true,\n            response: newResponse\n          });\n        });\n      }).catch(err => {\n        defaultResponse.status = 'error';\n        defaultResponse.message = err;\n        this.setState({\n          showModal: true,\n          response: defaultResponse\n        });\n      }).finally(() => {\n        var _this$genericModal$cu;\n\n        (_this$genericModal$cu = this.genericModal.current) === null || _this$genericModal$cu === void 0 ? void 0 : _this$genericModal$cu.openModal();\n      });\n    } else {\n      bookingApi.addTable(this.state.positionName, Number(this.state.maxSeats), this.props.restaurantGuid).then(result => {\n        result.json().then(response => {\n          let newResponse = defaultResponse;\n          newResponse.message = 'Table added with success!';\n\n          if (201 !== result.status) {\n            newResponse.message = response.message;\n            newResponse.status = response.status;\n          }\n\n          this.setState({\n            showModal: true,\n            response: newResponse\n          });\n        });\n      }).catch(err => {\n        defaultResponse.status = 'error';\n        defaultResponse.message = err;\n        this.setState({\n          showModal: true,\n          response: defaultResponse\n        });\n      }).finally(() => {\n        var _this$genericModal$cu2;\n\n        (_this$genericModal$cu2 = this.genericModal.current) === null || _this$genericModal$cu2 === void 0 ? void 0 : _this$genericModal$cu2.openModal();\n      });\n    }\n\n    event.preventDefault();\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, this.props.tableGuid ? React.createElement(\"ol\", {\n      className: \"breadcrumb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"breadcrumb-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Home\")), React.createElement(Link, {\n      className: \"breadcrumb-item\",\n      to: \"/manager\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Manager restaurants\"), React.createElement(Link, {\n      className: \"breadcrumb-item\",\n      to: `/restaurants/${this.props.restaurantGuid}/list-tables`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"List tables\"), React.createElement(\"li\", {\n      className: \"breadcrumb-item active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Edit table\")) : React.createElement(\"ol\", {\n      className: \"breadcrumb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"breadcrumb-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Home\")), React.createElement(Link, {\n      className: \"breadcrumb-item\",\n      to: \"/manager\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Manager restaurants\"), React.createElement(Link, {\n      className: \"breadcrumb-item\",\n      to: `/restaurants/${this.props.restaurantGuid}/list-tables`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"List tables\"), React.createElement(\"li\", {\n      className: \"breadcrumb-item active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Add table\"))), React.createElement(Form, {\n      onSubmit: this.saveTable,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(GenericModal, {\n      ref: this.genericModal,\n      message: this.state.response.message,\n      status: this.state.response.status,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(Form.Group, {\n      controlId: \"positionName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Table position name\"), React.createElement(Form.Control, {\n      value: this.state.positionName,\n      onChange: this.handleDataChange,\n      placeholder: \"Table positoin name\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"maxSeats\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Max seats\"), React.createElement(Form.Control, {\n      type: \"number\",\n      value: this.state.maxSeats,\n      onChange: this.handleDataChange,\n      placeholder: \"Max seats\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    })), React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Create\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/thiagovalentim/Documents/Projects/superb/client/src/components/Pages/Table.tsx"],"names":["React","Component","Form","Button","Link","Container","BookingApi","GenericModal","Table","constructor","props","genericModal","state","positionName","maxSeats","showModal","response","message","data","status","createRef","handleDataChange","bind","saveTable","getTable","componentDidMount","tableGuid","bookingApi","restaurantGuid","then","result","json","setState","event","name","target","id","value","defaultResponse","updateTable","Number","newResponse","catch","err","finally","current","openModal","addTable","preventDefault","render"],"mappings":"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","sourcesContent":["import React, { Component, RefObject } from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport Button from \"react-bootstrap/Button\";\nimport { Link } from 'react-router-dom';\nimport Container from \"react-bootstrap/Container\";\nimport { BookingApi } from \"../../services/booking/BookingApi\";\nimport { GenericModal } from \"../Modal\";\n\ntype ResponseData = {\n    data?: string,\n    message: string,\n    status: string\n};\n\ntype TableStates = {\n    positionName: string,\n    maxSeats: string,\n    showModal: boolean,\n    response: ResponseData\n};\n\ntype TableProps = {\n    restaurantGuid: string,\n    tableGuid?: string\n};\n\nexport class Table extends Component<TableProps, TableStates> {\n    private genericModal: RefObject<GenericModal>;\n\n    constructor(props: TableProps) {\n        super(props);\n\n        this.state = {\n            positionName: '',\n            maxSeats: '0',\n            showModal: false,\n            response: {\n                message: '',\n                data: '',\n                status: ''\n            }\n        }\n\n        this.genericModal = React.createRef();\n\n        this.handleDataChange = this.handleDataChange.bind(this);\n        this.saveTable = this.saveTable.bind(this);\n        this.getTable = this.getTable.bind(this);\n    }\n\n    public componentDidMount() {\n        if (this.props.tableGuid) {\n            this.getTable();\n        }\n    }\n\n    private getTable() {\n        const bookingApi = new BookingApi('');\n        bookingApi.getTable(this.props.restaurantGuid, this.props.tableGuid).then(result => {\n            result.json().then((response) => {\n                this.setState({\n                    maxSeats: response.data.maxSeats,\n                    positionName: response.data.positionName\n                })\n            });\n        })\n    }\n\n    private handleDataChange(event: any) {\n        const name = event.target.id;\n        const value = event.target.value;\n        const data = {\n            [name]: value\n        } as TableStates;\n\n        this.setState(data);\n    }\n\n    private saveTable(event: any) {\n        const bookingApi = new BookingApi('');\n        const defaultResponse = {\n            message: 'Restaurant registered with success',\n            status: 'success'\n        }\n\n        if (this.props.tableGuid) {\n            bookingApi.updateTable(this.state.positionName, Number(this.state.maxSeats), this.props.restaurantGuid, this.props.tableGuid).then(result => {\n                result.json().then(response => {\n                    let newResponse = defaultResponse;\n                    newResponse.message = 'Table updated with success!';\n                    if (200 !== result.status) {\n                        newResponse.message = response.message;\n                        newResponse.status = response.status;\n                    }\n\n                    this.setState({ showModal: true, response: newResponse });\n                });\n            }).catch(err => {\n                defaultResponse.status = 'error';\n                defaultResponse.message = err;\n                this.setState({ showModal: true, response: defaultResponse });\n            }).finally(() => {\n                this.genericModal.current?.openModal();\n            });\n        } else {\n            bookingApi.addTable(this.state.positionName, Number(this.state.maxSeats), this.props.restaurantGuid).then(result => {\n                result.json().then(response => {\n\n                    let newResponse = defaultResponse;\n                    newResponse.message = 'Table added with success!';\n                    if (201 !== result.status) {\n                        newResponse.message = response.message;\n                        newResponse.status = response.status;\n                    }\n\n                    this.setState({ showModal: true, response: newResponse });\n                });\n            }).catch(err => {\n                defaultResponse.status = 'error';\n                defaultResponse.message = err;\n                this.setState({ showModal: true, response: defaultResponse });\n            }).finally(() => {\n                this.genericModal.current?.openModal();\n            });\n        }\n\n        event.preventDefault();\n    }\n\n    render() {\n        return(\n            <Container>\n                <nav>\n                {this.props.tableGuid ?\n                        <ol className=\"breadcrumb\">\n                            <li className=\"breadcrumb-item\">\n                                <a href=\"/\">Home</a>\n                            </li>\n                            <Link className=\"breadcrumb-item\" to=\"/manager\">Manager restaurants</Link>\n                            <Link className=\"breadcrumb-item\" to={`/restaurants/${this.props.restaurantGuid}/list-tables`}>List tables</Link>\n                            <li className=\"breadcrumb-item active\">Edit table</li>\n                        </ol>\n                    :\n                        <ol className=\"breadcrumb\">\n                            <li className=\"breadcrumb-item\">\n                                <a href=\"/\">Home</a>\n                            </li>\n                            <Link className=\"breadcrumb-item\" to=\"/manager\">Manager restaurants</Link>\n                            <Link className=\"breadcrumb-item\" to={`/restaurants/${this.props.restaurantGuid}/list-tables`}>List tables</Link>\n                            <li className=\"breadcrumb-item active\">Add table</li>\n                        </ol>\n                    }\n                </nav>\n                <Form onSubmit={this.saveTable}>\n                    <GenericModal ref={this.genericModal} message={this.state.response.message} status={this.state.response.status} />\n                    <Form.Group controlId=\"positionName\">\n                        <Form.Label>Table position name</Form.Label>\n                        <Form.Control value={this.state.positionName} onChange={this.handleDataChange} placeholder=\"Table positoin name\" required />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"maxSeats\">\n                        <Form.Label>Max seats</Form.Label>\n                        <Form.Control type=\"number\" value={this.state.maxSeats} onChange={this.handleDataChange} placeholder=\"Max seats\" required />\n                    </Form.Group>\n                    <Button variant=\"primary\" type=\"submit\">\n                        Create\n                    </Button>\n                </Form>\n            </Container>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}