{"ast":null,"code":"var _jsxFileName = \"/Users/thiagovalentim/Documents/Projects/superb/client/src/components/Pages/Booking.tsx\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter, NavLink, Switch, Route } from 'react-router-dom';\nimport Table from 'react-bootstrap/Table';\nimport { BookingApi } from \"../../services/booking/BookingApi\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Nav from 'react-bootstrap/Nav';\nimport Form from 'react-bootstrap/Form';\nimport Button from \"react-bootstrap/Button\";\nexport class Booking extends Component {\n  constructor(props) {\n    super(props);\n    const hours = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n\n    const convertTime = (hours, a) => {\n      return hours.map(i => {\n        const hour = i + 0;\n\n        if (hour.toString().length > 1) {\n          return `${hour}:00 ${a}`;\n        }\n\n        return `0${hour}:00 ${a}`;\n      });\n    };\n\n    this.state = {\n      restaurants: [],\n      reservations: [],\n      tables: [],\n      open: '',\n      close: '',\n      name: '',\n      businessHourData: ['12:00', ...convertTime(hours, 'AM'), ...convertTime(hours, 'PM')],\n      isDefaultActive: true\n    };\n    this.handleDataChange = this.handleDataChange.bind(this);\n    this.createRestaurant = this.createRestaurant.bind(this);\n  }\n\n  componentDidMount() {\n    this.getRestaurants();\n  }\n\n  activeLink(isActive) {\n    this.setState({\n      isDefaultActive: isActive\n    });\n  }\n\n  getRestaurants() {\n    const bookingApi = new BookingApi('');\n    bookingApi.listRestaurants().then(response => {\n      response.json().then(data => {\n        this.setState({\n          restaurants: data.data\n        });\n      });\n    }); // bookingApi.listTables().then(response => {\n    //     response.json().then(data => {\n    //         this.setState({ tables: data.data });\n    //     });\n    // });\n    // bookingApi.listReservations().then(response => {\n    //     response.json().then(data => {\n    //         this.setState({ reservations: data.data });\n    //     });\n    // });\n  }\n\n  handleDataChange(event) {\n    const name = event.target.id;\n    const value = event.target.value;\n    const data = {\n      [name]: value\n    };\n    this.setState(data);\n  }\n\n  createRestaurant(event) {\n    const bookingApi = new BookingApi('');\n    bookingApi.createRestaurant(this.state.name, this.state.open, this.state.close).then(result => {\n      const allowedStatus = [200, 201];\n\n      if (allowedStatus.includes(result.status)) {\n        console.log('s');\n        return;\n      }\n\n      console.log('f');\n    }).catch(err => {\n      console.log('e', err);\n    });\n    event.preventDefault();\n  }\n\n  render() {\n    const [show, setShow] = React.useState(false);\n\n    const handleClose = () => setShow(false);\n\n    const handleShow = () => setShow(true);\n\n    const restaurants = this.state.restaurants;\n    const businessHours = this.state.businessHourData.map((hour, i) => React.createElement(\"option\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, hour));\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: show,\n      onHide: handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Modal heading\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Woohoo, you're reading this text in a modal!\"), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Close\"), React.createElement(Button, {\n      variant: \"primary\",\n      onClick: handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Save Changes\"))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      variant: \"pills\",\n      defaultActiveKey: \"/list-restaurants\",\n      className: \"flex-column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Nav.Link, {\n      as: NavLink,\n      active: this.state.isDefaultActive,\n      to: \"/list-restaurants\",\n      onClick: () => this.activeLink(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"List restaurants\"), React.createElement(Nav.Link, {\n      as: NavLink,\n      to: \"/add-restaurants\",\n      onClick: () => this.activeLink(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Add restaurant\"))), React.createElement(Col, {\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: [\"/list-restaurants\", \"/booking\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(Table, {\n      responsive: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Restaurant\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Business hours\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Actions\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, restaurants.map(restaurant => React.createElement(\"tr\", {\n      key: restaurant.guid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, restaurant.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"From \", restaurant.opensAt, \" to \", restaurant.closesAt, \" \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, restaurant.guid, \" \")))))), React.createElement(Route, {\n      path: \"/add-restaurants\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.createRestaurant,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Restaurant name\"), React.createElement(Form.Control, {\n      value: this.state.name,\n      onChange: this.handleDataChange,\n      placeholder: \"Restaurant name\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"open\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Open\"), React.createElement(Form.Control, {\n      as: \"select\",\n      value: this.state.open,\n      onChange: this.handleDataChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), businessHours)), React.createElement(Form.Group, {\n      controlId: \"close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Close\"), React.createElement(Form.Control, {\n      as: \"select\",\n      value: this.state.close,\n      onChange: this.handleDataChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), businessHours)), React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Create\"))))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/thiagovalentim/Documents/Projects/superb/client/src/components/Pages/Booking.tsx"],"names":["React","Component","BrowserRouter","NavLink","Switch","Route","Table","BookingApi","Container","Row","Col","Nav","Form","Button","Booking","constructor","props","hours","convertTime","a","map","i","hour","toString","length","state","restaurants","reservations","tables","open","close","name","businessHourData","isDefaultActive","handleDataChange","bind","createRestaurant","componentDidMount","getRestaurants","activeLink","isActive","setState","bookingApi","listRestaurants","then","response","json","data","event","target","id","value","result","allowedStatus","includes","status","console","log","catch","err","preventDefault","render","show","setShow","useState","handleClose","handleShow","businessHours","restaurant","guid","opensAt","closesAt"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { BrowserRouter, NavLink, Switch, Route } from 'react-router-dom';\nimport Table from 'react-bootstrap/Table';\nimport { BookingApi } from \"../../services/booking/BookingApi\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Nav from 'react-bootstrap/Nav';\nimport Form from 'react-bootstrap/Form';\nimport Button from \"react-bootstrap/Button\";\n\ntype BookingState = {\n    restaurants: any[],\n    reservations: any[],\n    tables: any[],\n    open: string,\n    close: string,\n    name: string,\n    businessHourData: string[],\n    isDefaultActive: boolean;\n};\n\nexport class Booking extends Component<{}, BookingState> {\n    constructor(props: any) {\n        super(props);\n        const hours = [1,2,3,4,5,6,7,8,9,10,11];\n\n        const convertTime = (hours: number[], a: string): string[] => {\n            return hours.map((i: number) => {\n                const hour = i + 0;\n                if (hour.toString().length > 1) {\n                    return `${hour}:00 ${a}`;\n                }\n    \n                return `0${hour}:00 ${a}`;\n            });\n        };\n\n        this.state = {\n            restaurants: [],\n            reservations: [],\n            tables: [],\n            open: '',\n            close: '',\n            name: '',\n            businessHourData: ['12:00', ...convertTime(hours, 'AM'), ...convertTime(hours, 'PM')],\n            isDefaultActive: true\n        };\n\n        this.handleDataChange = this.handleDataChange.bind(this);\n        this.createRestaurant = this.createRestaurant.bind(this);\n    }\n\n    public componentDidMount() {\n        this.getRestaurants();\n    }\n  \n    public activeLink(isActive: boolean) {\n        this.setState({ isDefaultActive: isActive });\n    }\n  \n    public getRestaurants() {\n        const bookingApi = new BookingApi('');\n        bookingApi.listRestaurants().then(response => {\n            response.json().then(data => {\n                this.setState({ restaurants: data.data });\n            });\n        });\n\n        // bookingApi.listTables().then(response => {\n        //     response.json().then(data => {\n        //         this.setState({ tables: data.data });\n        //     });\n        // });\n\n        // bookingApi.listReservations().then(response => {\n        //     response.json().then(data => {\n        //         this.setState({ reservations: data.data });\n        //     });\n        // });\n    }\n\n    handleDataChange(event: any) {\n        const name = event.target.id;\n        const value = event.target.value;\n        const data = {\n            [name]: value\n        } as BookingState;\n\n        this.setState(data);\n    }\n\n    public createRestaurant(event: any) {\n        const bookingApi = new BookingApi('');\n        bookingApi.createRestaurant(this.state.name, this.state.open, this.state.close).then(result => {\n            const allowedStatus = [200, 201];\n            if (allowedStatus.includes(result.status)) {\n                console.log('s');\n                return;\n            }\n\n            console.log('f');\n        }).catch(err => {\n            console.log('e', err)\n        });\n\n        event.preventDefault();\n    }\n\n    render() {\n        const [show, setShow] = React.useState(false);\n\n        const handleClose = () => setShow(false);\n        const handleShow = () => setShow(true);\n\n        const restaurants = this.state.restaurants;\n        const businessHours = this.state.businessHourData.map((hour: string, i: number) => <option key={i}>{hour}</option>);\n        \n        return(\n            <BrowserRouter>\n                <Container>\n                <Modal show={show} onHide={handleClose}>\n                    <Modal.Header closeButton>\n                    <Modal.Title>Modal heading</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n                    <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={handleClose}>\n                        Save Changes\n                    </Button>\n                    </Modal.Footer>\n                </Modal>\n                    <Row>\n                        <Col sm={2}>\n                        <Nav variant=\"pills\" defaultActiveKey=\"/list-restaurants\" className=\"flex-column\">\n                            <Nav.Link as={NavLink} active={this.state.isDefaultActive} to=\"/list-restaurants\" onClick={() => this.activeLink(true)}>List restaurants</Nav.Link>\n                            <Nav.Link as={NavLink} to=\"/add-restaurants\" onClick={() => this.activeLink(false)} >Add restaurant</Nav.Link>\n                        </Nav>\n                        </Col>\n                        <Col sm={10}>\n                            <Switch>\n                                <Route path={[\"/list-restaurants\", \"/booking\"]}>\n                                    <Table responsive>\n                                        <thead>\n                                            <tr>\n                                            <th>Restaurant</th>\n                                            <th>Business hours</th>\n                                            <th>Actions</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {restaurants.map((restaurant: any) =>\n                                                <tr key={restaurant.guid}>\n                                                    <td>{restaurant.name}</td>\n                                                    <td>From {restaurant.opensAt} to {restaurant.closesAt} </td>\n                                                    <td>{restaurant.guid} </td>\n                                                </tr>\n                                            )}\n                                        </tbody>\n                                    </Table>\n                                </Route>\n                                <Route path=\"/add-restaurants\">\n                                    <Form onSubmit={this.createRestaurant}>\n                                        <Form.Group controlId=\"name\">\n                                            <Form.Label>Restaurant name</Form.Label>\n                                            <Form.Control value={this.state.name} onChange={this.handleDataChange} placeholder=\"Restaurant name\" required />\n                                        </Form.Group>\n\n                                        <Form.Group controlId=\"open\">\n                                            <Form.Label>Open</Form.Label>\n                                            <Form.Control as=\"select\" value={this.state.open} onChange={this.handleDataChange}  required>\n                                                <option></option>\n                                                {businessHours}\n                                            </Form.Control>\n                                        </Form.Group>\n                                        <Form.Group controlId=\"close\">\n                                            <Form.Label>Close</Form.Label>\n                                            <Form.Control as=\"select\" value={this.state.close} onChange={this.handleDataChange} required>\n                                                <option></option>\n                                                {businessHours}\n                                            </Form.Control>\n                                        </Form.Group>\n                                        <Button variant=\"primary\" type=\"submit\">\n                                            Create\n                                        </Button>\n                                    </Form>\n                                </Route>\n                            </Switch>\n                        </Col>\n                    </Row>\n                </Container>\n            </BrowserRouter>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}