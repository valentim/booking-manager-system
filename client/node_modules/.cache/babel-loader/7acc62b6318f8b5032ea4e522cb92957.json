{"ast":null,"code":"export class BookingApi {\n  constructor(url) {\n    this.url = void 0;\n    this.url = 'http://localhost:3000'; // url;\n  }\n\n  async listRestaurants() {\n    return await fetch(`${this.url}/v1/restaurants`);\n  }\n\n  async listTables(restaurantsGuid) {\n    return await fetch(`${this.url}/v1/restaurants/${restaurantsGuid}/tables`);\n  }\n\n  async getTable(restaurantsGuid, tableGuid) {\n    return await fetch(`${this.url}/v1/restaurants/${restaurantsGuid}/tables/${tableGuid}`);\n  }\n\n  async listReservations(restaurantsGuid, tablesGuid) {\n    return await fetch(`${this.url}/v1/restaurants/${restaurantsGuid}/tables/${tablesGuid}/reservations`);\n  }\n\n  async createRestaurant(name, open, close) {\n    return await fetch(`${this.url}/v1/restaurants/`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        opensAt: open,\n        closesAt: close\n      })\n    });\n  }\n\n  async createReservation(when, user, restaurantGuid, tableGuid) {\n    return await fetch(`${this.url}/v1/restaurants/${restaurantGuid}/tables/${tableGuid}/reservations`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        when,\n        user\n      })\n    });\n  }\n\n  async updateReservation(when, user, restaurantGuid, tableGuid, reservationGuid) {\n    return await fetch(`${this.url}/v1/restaurants/${restaurantGuid}/tables/${tableGuid}/reservations/${reservationGuid}`, {\n      method: 'PUT',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        when,\n        user\n      })\n    });\n  }\n\n  async cancelReservation(when, user, restaurantGuid, tableGuid, reservationGuid) {\n    return await fetch(`${this.url}/v1/restaurants/${restaurantGuid}/tables/${tableGuid}/reservations/${reservationGuid}`, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n\n  async addTable(positionName, maxSeats, restaurantGuid) {\n    return await fetch(`${this.url}/v1/restaurants/${restaurantGuid}/tables`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        positionName,\n        maxSeats\n      })\n    });\n  }\n\n  async updateTable(positionName, maxSeats, restaurantGuid, tableGuid) {\n    return await fetch(`${this.url}/v1/restaurants/${restaurantGuid}/tables/${tableGuid}`, {\n      method: 'PUT',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        positionName,\n        maxSeats\n      })\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/thiagovalentim/Documents/Projects/superb/client/src/services/booking/BookingApi.ts"],"names":["BookingApi","constructor","url","listRestaurants","fetch","listTables","restaurantsGuid","getTable","tableGuid","listReservations","tablesGuid","createRestaurant","name","open","close","method","headers","body","JSON","stringify","opensAt","closesAt","createReservation","when","user","restaurantGuid","updateReservation","reservationGuid","cancelReservation","addTable","positionName","maxSeats","updateTable"],"mappings":"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","sourcesContent":["export class BookingApi {\n    private url: string;\n\n    constructor(url: string) {\n        this.url = 'http://localhost:3000'; // url;\n    }\n\n    public async listRestaurants() {\n        return await fetch(`${this.url}/v1/restaurants`);\n    }\n\n    public async listTables(restaurantsGuid: string) {\n        return await fetch(`${this.url}/v1/restaurants/${restaurantsGuid}/tables`);\n    }\n\n    public async getTable(restaurantsGuid: string, tableGuid: string) {\n        return await fetch(`${this.url}/v1/restaurants/${restaurantsGuid}/tables/${tableGuid}`);\n    }\n\n    public async listReservations(restaurantsGuid: string, tablesGuid: string) {\n        return await fetch(`${this.url}/v1/restaurants/${restaurantsGuid}/tables/${tablesGuid}/reservations`);\n    }\n\n    public async createRestaurant(name: string, open: string, close: string) {\n        return await fetch(`${this.url}/v1/restaurants/`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                name,\n                opensAt: open,\n                closesAt: close\n            })\n        });\n    }\n\n    public async createReservation(when: string, user: string, restaurantGuid: string, tableGuid: string) {\n        return await fetch(`${this.url}/v1/restaurants/${restaurantGuid}/tables/${tableGuid}/reservations`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                when,\n                user\n            })\n        });\n    }\n\n    public async updateReservation(when: string, user: string, restaurantGuid: string, tableGuid: string, reservationGuid: string) {\n        return await fetch(`${this.url}/v1/restaurants/${restaurantGuid}/tables/${tableGuid}/reservations/${reservationGuid}`, {\n            method: 'PUT',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                when,\n                user\n            })\n        });\n    }\n\n    public async cancelReservation(when: string, user: string, restaurantGuid: string, tableGuid: string, reservationGuid: string) {\n        return await fetch(`${this.url}/v1/restaurants/${restaurantGuid}/tables/${tableGuid}/reservations/${reservationGuid}`, {\n            method: 'DELETE',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        });\n    }\n\n    public async addTable(positionName: string, maxSeats: number, restaurantGuid: string) {\n        return await fetch(`${this.url}/v1/restaurants/${restaurantGuid}/tables`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                positionName,\n                maxSeats\n            })\n        });\n    }\n\n    public async updateTable(positionName: string, maxSeats: number, restaurantGuid: string, tableGuid: string) {\n        return await fetch(`${this.url}/v1/restaurants/${restaurantGuid}/tables/${tableGuid}`, {\n            method: 'PUT',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                positionName,\n                maxSeats\n            })\n        });\n    }\n}"]},"metadata":{},"sourceType":"module"}